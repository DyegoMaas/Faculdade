Tutorial para rodar a aplicação completa.

1) Backend:

1.1) Acesse o diretório 'Aplicacao'.
1.2) Abra a solution Aplicacao.sln com uma IDE para .NET, como o Visual Studio 2017 ou Jetbrains Rider.
1.3) Para configurar o broker MQTT, basta editar a seção 'mqtt' do arquivo 'app.config', na raiz da aplicação.
1.4) Restaure os pacotes Nuget.
1.4) Ao rodar a aplicação, ela rodará em modo console. Se quiser instalar o backend como serviço do Windows, basta compilar a aplicação e acessar a pasta dos binários. Pode ser bin/Release ou bin/Debug, e copiar os arquivos para o diretório de onde o serviço deve rodar.
Acesse o diretório em um terminal com permissões de administrador e rode o seguinte comando: 'SmartOutlet.Service.exe install'. Como a aplicação foi desenvolvida com a biblioteca Topshelf, os seguintes comandos estão disponíveis a partir do executável:
 - install
 - uninstall
 - start
 - stop
Para saber mais sobre o TopShelf, acesse topshelf-project.com.

Quando a aplicação estiver rodando, estará rodando no endereço http://localhost:8001.

 * Para testar os endpoints do backend, pode ser usada uma ferramenta de requisições HTTP, como o Postman.
 * Para testar as mensagens MQTT, sugiro utilizar o MQTT Lens.

2) Firmware do ESP8266:

Requisitos: instalar a IDE do Arduino:
https://www.arduino.cc/en/main/software

Na IDE, será necessário instalar o pacote com suporte à placa de desenvolvimento NodeMCU (e ao ESP8266).
Para isso, acessar 'Arquivo->Preferências', e adicionar o seguinte no endereço no campo 'URLs Adicionais Para Gerenciadores de Placas':
http://arduino.esp8266.com/stable/package_esp8266com_index.json

A partir de então, a placa de desenvolvimento 'NodeMCU 1.0 (ESP-12E MODULE)' poderá ser selecionada no menu 'Ferramentas'.

No menu 'Ferramentas/Upload speed' selecionar:
 - A velocidade 115200.
 - A porta COM utilizada para conectar o NodeMCU.

1.1) Abrir o sketch no diretório PlugMqtt. 
1.2) Adicionar ao sketch todos os arquivos .h e .cpp do diretório
1.3) Informar no começo do arquivo 'smart_plug_mqtt.ino' as credenciais da Wi-Fi e do broker MQTT.
1.3) Se tudo der certo, basta compilar e descarregar o firmware no módulo.
1.4) No menu Ferramentas->Monitor serial é possível acompanhar o que o plug está fazendo.

3) Rodando a aplicação Web (frontend):

Primeiramente, é necessário instalar o ambiente do Node.JS:
https://nodejs.org/en/

3.1) Em um terminal administrador, acessar o diretório /WebInterface.
3.2) Instalar a ferramenta de build GULP, através do comando 'npm install gulp'.
3.3) Instalar o gerenciador de pacotes Bower através do comando 'npm install bower'
3.3) Rodar o comando 'gulp'.
3.4) Rodar o comando 'gulp dev'. 
O browser será aberto com a opção 'browser sync', e qualquer alteração nos fontes (html, css, js) farão com que a página seja recarregada automaticamente no navegador.